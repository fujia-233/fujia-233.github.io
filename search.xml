<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java基础知识</title>
      <link href="/2024/12/04/Java%E5%9F%BA%E7%A1%80/"/>
      <url>/2024/12/04/Java%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><p>byte  占1字节  </p><p>short  占2字节</p><p>int  占4字节</p><p>long  占8字节</p><table><thead><tr><th></th><th align="left">byte</th><th align="left">short</th><th align="left">int</th><th align="left">long</th><th><strong>float</strong></th><th><strong>double</strong></th><th><strong>char</strong></th><th><strong>boolean</strong></th></tr></thead><tbody><tr><td>大小</td><td align="left">8位</td><td align="left">16 位</td><td align="left">32位</td><td align="left">64 位</td><td>32位</td><td>64 位</td><td>16 位</td><td>1位</td></tr><tr><td></td><td align="left">最大存储数据量是255</td><td align="left">最大数据存储量是65536</td><td align="left">最大数据存储容量是2的32次方减1</td><td align="left">最大数据存储容量是2的64次方减1</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td align="left">数据范围是-128~127之间</td><td align="left">数据范围是-32768~32767之间</td><td align="left">数据范围是负的2的31次方到正的2的31次方减1</td><td align="left">数据范围为负的2的63次方到正的2的63次方减1</td><td>数据范围在3.4e-45~1.4e38</td><td>数据范围在4.9e-324~1.8e308</td><td>只有true和false两个取值</td><td>存储Unicode码，用单引号赋值</td></tr><tr><td>默认值</td><td align="left">0</td><td align="left">0</td><td align="left">0</td><td align="left"><strong>0L</strong></td><td><strong>0.0f</strong></td><td><strong>0.0d</strong></td><td></td><td><strong>false</strong></td></tr><tr><td></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td><td></td><td></td><td></td><td></td></tr></tbody></table><table><thead><tr><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>byte</td><td></td><td></td><td></td><td></td></tr><tr><td>short</td><td></td><td></td><td></td><td></td></tr><tr><td>int</td><td></td><td></td><td></td><td></td></tr><tr><td>long</td><td></td><td></td><td></td><td></td></tr><tr><td>float</td><td></td><td></td><td></td><td></td></tr><tr><td>double</td><td></td><td></td><td></td><td></td></tr><tr><td>char</td><td></td><td></td><td></td><td></td></tr><tr><td>boolean</td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>位（bit）：是计算机 内部数据 储存的最小单位，11001100是一个八位二进制数。<br>字节（byte）：是计算机中 数据处理 的基本单位，习惯上用大写 B 来表示，<br>1B (byte,字节) &#x3D; 8bit (位)<br>字符：是指计算机中使用的字母、数字、字和符号</p><p>1bit表示1位,<br>1Byte表示<br>个字节1B&#x3D;8b。<br>1024B&#x3D;1KB<br>1024KB&#x3D;1M<br>1024M&#x3D;1G.</p><h3 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h3>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> 技术 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx</title>
      <link href="/2024/12/04/Nginx/"/>
      <url>/2024/12/04/Nginx/</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a><strong>Nginx</strong></h1><p>别名：engine x</p><p>百科：<em>Nginx</em> (engine x) 是一个高性能的<a href="https://baike.baidu.com/item/HTTP">HTTP</a>和<a href="https://baike.baidu.com/item/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/7793488">反向代理</a>web服务器，同时也提供了IMAP&#x2F;POP3&#x2F;SMTP服务。</p><p>主要功能：<strong>反向代理</strong>，<strong>负载均衡</strong>，<strong>动静分离</strong></p><p>1.项目刚刚上线的时候，并发量小，用户使用的少，所以在低并发的情况下，一个jar包启动应用就够了，然后内部tomcat返回内容给用户。</p><p>2.但是慢慢的，使用我们平台的用户越来越多了，并发量慢慢增大了，这时候一台服务器满足不了我们的需求了。</p><p>3.于是我们横向扩展，又增加了服务器。这个时候几个项目启动在不同的服务器上，用户要访问，就需要增加一个代理服务器了，通过代理服务器来帮我们转发和处理请求。</p><p>4.我们希望这个代理服务器可以帮助我们接收用户的请求，然后将用户的请求按照规则帮我们转发到不同的服务器节点之上。这个过程用户是无感知的，用户并不知道是哪个服务器返回的结果，我们还希望他可以按照服务器的性能提供不同的权重选择。保证最佳体验！所以我们使用了Nginx。</p><h2 id="一、正向代理和反向代理"><a href="#一、正向代理和反向代理" class="headerlink" title="一、正向代理和反向代理"></a>一、正向代理和反向代理</h2><p><strong>正向代理</strong>代理的对象是客户端，<strong>反向代理</strong>代理的对象是服务端</p><p><strong>正向代理：</strong></p><p>用户知道目标服务器地址，但由于网络限制等原因，无法直接访问。这时候需要先连接代理服务器，然后再由代理服务器访问目标服务器。</p><p>例如：由于防火墙的原因，我们并不能直接访问谷歌，那么我们可以借助VPN来实现。正向代理“代理”的是客户端，而且客户端是知道目标的，而目标是不知道客户端是通过VPN访问的。</p><p><img src="/../images/postsImg/Nginx/v2-c8ac111c267ae0745f984e326ef0c47f_720w.jpg" alt="img"></p><p><strong>反向代理：</strong></p><p>当我们在外网访问百度的时候，其实会进行一个转发，代理到内网去，这就是所谓的反向代理，即反向代理“代理”的是服务器端，而且这一个过程对于客户端而言是透明的。</p><p><img src="/../images/postsImg/Nginx/v2-4787a512240b238ebf928cd0651e1d99_720w.jpg" alt="img"></p><h2 id="二、负载均衡"><a href="#二、负载均衡" class="headerlink" title="二、负载均衡"></a>二、负载均衡</h2><p>Nginx提供的负载均衡策略有2种：内置策略和扩展策略。内置策略为轮询，加权轮询，Ip hash。</p><p>轮询<br><img src="/../images/postsImg/Nginx/kuangstudy4d33dfac-1949-4b2d-abb8-fe0b6e65b8dc.png" alt="img"><br>加权轮询<br><img src="/../images/postsImg/Nginx/kuangstudyb1e3e440-4159-4259-a174-528b56cb04b2.png" alt="img"><br>iphash对客户端请求的ip进行hash操作，然后根据hash结果将同一个客户端ip的请求分发给同一台服务器进行处理，可以解决session不共享的问题。<br><img src="/../images/postsImg/Nginx/kuangstudy64acb9a3-cd1a-4c0e-a1fa-9b220046a95a.png" alt="img"></p><h2 id="三、动静分离"><a href="#三、动静分离" class="headerlink" title="三、动静分离"></a>三、动静分离</h2><p>动静分离，在我们的软件开发中，有些请求是需要后台处理的，有些请求是不需要经过后台处理的（如：css、html、jpg、js等等文件），这些不需要经过后台处理的文件称为静态文件。让动态网站里的动态网页根据一定规则把不变的资源和经常变的资源区分开来，动静资源做好了拆分以后，我们就可以根据静态资源的特点将其做缓存操作。提高资源响应的速度。</p><p><img src="/../images/postsImg/Nginx/kuangstudyedb1bbd6-e530-4aba-8fde-68658a10e73f.png" alt="img"></p><h2 id="四、使用"><a href="#四、使用" class="headerlink" title="四、使用"></a>四、使用</h2><h3 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h3><p>官网下载<a href="http://nginx.org/en/download.html%EF%BC%9A">http://nginx.org/en/download.html：</a></p><p><img src="/../images/postsImg/Nginx/image-20220109174326668.png" alt="img"></p><p>下载解压后目录：</p><p><img src="/../images/postsImg/Nginx/image-20220109174115257.png" alt="image-20220109174115257"></p><h3 id="2-启动"><a href="#2-启动" class="headerlink" title="2.启动"></a>2.启动</h3><p>有很多种方法启动nginx</p><p>(1)直接双击nginx.exe，双击后一个黑色的弹窗一闪而过</p><p>(2)打开cmd命令窗口，切换到nginx解压目录下，输入命令 <code>nginx.exe</code> ，回车即可</p><h3 id="3-检查nginx是否启动成功"><a href="#3-检查nginx是否启动成功" class="headerlink" title="3.检查nginx是否启动成功"></a>3.检查nginx是否启动成功</h3><p>直接在浏览器地址栏输入网址 <a href="http://localhost/">http://localhost:80</a> 回车，出现以下页面说明启动成功！</p><p><img src="/../images/postsImg/Nginx/kuangstudya21688c8-159e-4caa-8e65-3dc056b6b78e.png" alt="img"></p><h3 id="4-配置监听"><a href="#4-配置监听" class="headerlink" title="4.配置监听"></a>4.配置监听</h3><p>nginx的配置文件是conf目录下的nginx.conf，默认配置的nginx监听的端口为80，如果80端口被占用可以修改为未被占用的端口即可。</p><p><img src="/../images/postsImg/Nginx/kuangstudyf23105c4-b0b2-4e22-a1bf-b8098f40c144.png" alt="img"></p><p>当我们修改了nginx的配置文件nginx.conf 时，不需要关闭nginx后重新启动nginx，只需要执行命令 <strong>nginx -s reload</strong> 即可让改动生效</p><h3 id="5-简单使用"><a href="#5-简单使用" class="headerlink" title="5.简单使用"></a>5.简单使用</h3><p>在conf目录下的nginx.conf文件里配置Nginx</p><p>主要配置：</p><p><img src="/../images/postsImg/Nginx/image-20220109182109337.png" alt="image-20220109182109337"></p><p>反向代理和负载均衡配置</p><p><img src="/../images/postsImg/Nginx/image-20220109182933006.png" alt="image-20220109182933006"></p><p>配置完后执行命令 <strong>nginx -s reload</strong> 即可让改动生效</p><h3 id="6-关闭nginx"><a href="#6-关闭nginx" class="headerlink" title="6.关闭nginx"></a>6.关闭nginx</h3><p>如果使用cmd命令窗口启动nginx， 关闭cmd窗口是不能结束nginx进程的，可使用两种方法关闭nginx</p><p>(1)输入nginx命令 <code>nginx -s stop</code>(快速停止nginx) 或 <code>nginx -s quit</code>(完整有序的停止nginx)</p><p>(2)使用taskkill <code>taskkill /f /t /im nginx.exe</code></p><ol><li><code>taskkill是用来终止进程的，</code></li><li><code>/f是强制终止 .</code></li><li><code>/t终止指定的进程和任何由此启动的子进程。</code></li><li><code>/im示指定的进程名称 .</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术 </tag>
            
            <tag> Java </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/12/03/hello-world/"/>
      <url>/2024/12/03/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! </p><h4 id="helloWorld"><a href="#helloWorld" class="headerlink" title="helloWorld!"></a>helloWorld!</h4><h3 id="hello-FuJia"><a href="#hello-FuJia" class="headerlink" title="hello FuJia!"></a>hello FuJia!</h3>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Typora </tag>
            
            <tag> Hello </tag>
            
            <tag> FuJia </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
